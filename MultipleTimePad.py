
# Chifferate 
chifferat1 = [0x19, 0x0e, 0x4f, 0x47, 0x1d, 0x07, 0x4e, 0x10, 0x05, 0x0a, 0x54, 0x1f, 0x0a, 0x00, 0x53, 0x07,
0x54, 0x12, 0x1b, 0x1a, 0x16, 0x44, 0x49, 0x19, 0x41, 0x0f, 0x19, 0x10, 0x1e, 0x13, 0x4f, 0x01,
0x1b, 0x17, 0x15, 0x48, 0x14, 0x49, 0x0d, 0x17, 0x16, 0x00, 0x03, 0x41, 0x00, 0x41, 0x12, 0x45,
0x0e, 0x48, 0x02, 0x0b, 0x4e, 0x16, 0x1a, 0x04, 0x54, 0x1e, 0x0e, 0x1d, 0x00, 0x5e, 0x49, 0x19,
0x1a, 0x1d, 0x0e, 0x52, 0x36, 0x1d, 0x16, 0x4e, 0x1d, 0x47, 0x4e, 0x02, 0x0b, 0x1c, 0x07, 0x59,
0x44, 0x1d, 0x45, 0x19, 0x0b, 0x0b, 0x00, 0x1a, 0x06, 0x1a, 0x49, 0x00, 0x11, 0x0f, 0x00, 0x53,
0x59, 0x45, 0x61, 0x10, 0x4f, 0x02, 0x42, 0x15, 0x53, 0x1f, 0x4e, 0x1b, 0x1f, 0x49, 0x04, 0x48,
0x0e, 0x17, 0x1c, 0x00, 0x1d, 0x1b, 0x45, 0x4c, 0x07, 0x0b, 0x0b, 0x4c, 0x45, 0x1d, 0x07, 0x10,
0x47, 0x01, 0x5d, 0x00]

chifferat2 = [0x1d, 0x57, 0x07, 0x41, 0x1b, 0x03, 0x00, 0x1c, 0x07, 0x10, 0x53, 0x12, 0x18, 0x1d, 0x01, 0x1f,
0x01, 0x53, 0x30, 0x01, 0x06, 0x00, 0x04, 0x0f, 0x4b, 0x06, 0x52, 0x0d, 0x18, 0x11, 0x4f, 0x05,
0x17, 0x05, 0x03, 0x44, 0x59, 0x59, 0x0e, 0x07, 0x45, 0x44, 0x0d, 0x41, 0x10, 0x48, 0x0e, 0x45,
0x1d, 0x49, 0x14, 0x0d, 0x0b, 0x16, 0x52, 0x00, 0x1a, 0x0d, 0x4f, 0x1d, 0x49, 0x55, 0x00, 0x0c,
0x01, 0x0a, 0x54, 0x1a, 0x16, 0x55, 0x1f, 0x08, 0x1a, 0x02, 0x52, 0x4b, 0x1c, 0x16, 0x06, 0x00,
0x01, 0x0f, 0x56, 0x0a, 0x4e, 0x11, 0x4f, 0x54, 0x1a, 0x19, 0x04, 0x52, 0x04, 0x41, 0x05, 0x1f,
0x42, 0x00, 0x2e, 0x02, 0x45, 0x1e, 0x45, 0x00,	0x14, 0x15, 0x49, 0x1a, 0x46]

chifferat3 = [0x15, 0x57, 0x1c, 0x54, 0x00, 0x05, 0x4b, 0x16, 0x1a, 0x0a, 0x4b, 0x12, 0x1d, 0x52, 0x06, 0x06,
0x47, 0x16, 0x0d, 0x4e, 0x1e, 0x45, 0x49, 0x1a, 0x4f, 0x43, 0x10, 0x0c, 0x09, 0x54, 0x0e, 0x47,
0x01, 0x15, 0x1f, 0x0b, 0x12, 0x00, 0x15, 0x1a, 0x04, 0x54, 0x42, 0x16, 0x0b, 0x55, 0x07, 0x01,
0x59, 0x54, 0x15, 0x0c, 0x1e, 0x09, 0x17, 0x41, 0x1d, 0x1d, 0x1c, 0x4e, 0x56, 0x4c, 0x4c, 0x14,
0x0b, 0x44, 0x45, 0x04, 0x00, 0x07, 0x0a, 0x49, 0x17, 0x02, 0x41, 0x19, 0x4b, 0x59, 0x3a, 0x00,
0x1d, 0x01, 0x4c, 0x0b, 0x4e, 0x0d, 0x49, 0x19, 0x45, 0x4d, 0x42, 0x61, 0x04, 0x41, 0x09, 0x0a,
0x0e, 0x41, 0x26, 0x11, 0x0c, 0x4c, 0x2c, 0x41, 0x17, 0x1b, 0x4e, 0x53, 0x1c, 0x49, 0x16, 0x56,
0x0e, 0x0b, 0x59, 0x42, 0x1c, 0x0a, 0x00, 0x0b, 0x1d, 0x0b, 0x02, 0x4e, 0x45, 0x0c, 0x0e, 0x1b,
0x06, 0x06, 0x4f, 0x5d, 0x00 ]
#Auf lesbare Form bringen 
#Ausführen für die erste XOR-verknüpfung aus 
#Chifferat 1 & 2 
#Ergebnis String eins erstellen
#Bitweise xor 
# ^ entspricht  xor 
#zip bringt das i-te Element zurück
ergebnisxorA = ""
for chiff, chiff2 in zip(chifferat1,chifferat2):
      xorvalue = chiff ^ chiff2
      #Bereichsprüfung für ASCII
      if xorvalue < 32:
            xorvalue = 127-xorvalue
      ergebnisxorA += chr(xorvalue)
#Ausführen für die zweite XOR-verknüpfung aus 
#Chifferat 1 & 3 
#Ergebnis String zwei erstellen
ergebnisxorB = ""
for chiff, chiff2 in zip(chifferat1,chifferat3):
      xorvalue = chiff ^ chiff2
      #Bereichsprüfung für ASCII
      if xorvalue < 32:
           xorvalue = 127-xorvalue
      ergebnisxorB += chr(xorvalue)
#Xor-verknüpfung
wort= "seven"
pad = ""
lesbar1 = ""
lesbar2 = ""
#Lösungswort/Pad um die länge der Ergebnise aus den vorrigen XOR-Verknüpfungen
#Verlängern
while (len(pad)<len(ergebnisxorA)):
      pad += wort
#xor verknüpfen mit dem häufigsten Wort im Englischen 
#bsp hier seven
#Erster Lesbarer text 
for  chiper_number, pad_number in zip(ergebnisxorA,pad):
      xorvalue = ord(pad_number) ^ ord(chiper_number)
      #Bereichsprüfung für ASCII
      if (xorvalue < 59) and (xorvalue > 34):
            xorvalue += 25
      if xorvalue < 32:
            xorvalue = 127-xorvalue
      lesbar1 += chr(xorvalue)
pad = ""
while (len(pad)<len(ergebnisxorB)):
      pad += wort
#Zweiter Lesbarer text 
for  chiper_number, pad_number in zip(ergebnisxorB,pad):
      xorvalue = ord(pad_number) ^ ord(chiper_number)
      #Bereichsprüfung für ASCII
      if (xorvalue < 59) and (xorvalue > 34):
            xorvalue += 25
      if xorvalue < 32:
            xorvalue = 127-xorvalue
      lesbar2+= chr(xorvalue)
#Ausgaben
print("Chifferat 1 xor Chifferat 2:")
print (ergebnisxorA) 
print()
    
print("Erster 'lesbarer' Text:")
print (lesbar1)  
print()

print("Chifferat 1 xor Chifferat 3:")
print (ergebnisxorB)  
print()

print("Zweiter 'lesbarer' Text:")
print (lesbar2)    
print()
print()
print()
